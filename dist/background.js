let o={},s=null;chrome.tabs.onUpdated.addListener((e,r,t)=>{if(r.status==="complete"&&t.url)try{s=new URL(t.url).hostname,console.log("Current domain updated:",s),o={}}catch(n){console.error("Error parsing URL:",n)}});chrome.tabs.onActivated.addListener(async e=>{try{const r=await chrome.tabs.get(e.tabId);r.url&&(s=new URL(r.url).hostname,console.log("Current domain updated:",s),o={})}catch(r){console.error("Error getting tab info:",r)}});chrome.webRequest.onSendHeaders.addListener(e=>{if(s)try{const r=new URL(e.url);if((r.hostname===s||r.hostname.endsWith(`.${s}`))&&(console.log("Request headers captured:",e.url),e.requestHeaders)){const t=`${Date.now()}_${e.requestId}`;o[t]={headers:e.requestHeaders,url:e.url,timestamp:Date.now()},console.log("Headers for",e.url,":",e.requestHeaders)}}catch(r){console.error("Error processing request:",r)}},{urls:["<all_urls>"]},["requestHeaders","extraHeaders"]);chrome.webRequest.onBeforeRequest.addListener(e=>{console.log("Request started:",e.url)},{urls:["<all_urls>"]});chrome.webRequest.onCompleted.addListener(e=>{console.log("Request completed:",e.url)},{urls:["<all_urls>"]});chrome.webRequest.onErrorOccurred.addListener(e=>{console.log("Request error:",e.url,e.error)},{urls:["<all_urls>"]});setInterval(()=>{const e=Date.now();Object.keys(o).forEach(r=>{e-o[r].timestamp>3e5&&delete o[r]})},6e4);chrome.runtime.onMessage.addListener((e,r,t)=>{if(console.log("Message received:",e),e.type==="getHeaders"){const n=Object.entries(o).sort(([,a],[,l])=>l.timestamp-a.timestamp).reduce((a,[l,u])=>(a[l]=u,a),{});console.log("Sending headers:",n),t(n)}return!0});
